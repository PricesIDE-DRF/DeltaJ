 configuration delta "AddChatBotClass"
	dialect <http://www.emftext.org/java>
		creates <de/tu_bs/cs/isf/deltatalk/ChatBot.java>
		{
	addClassifier(<resource:de/tu_bs/cs/isf/deltatalk/ChatBot.java>, "package de.tu_bs.cs.isf.deltatalk;
	
		import java.io.BufferedReader;
		import java.io.IOException;
		import java.io.InputStreamReader;
		import java.net.URL;
		
		import javax.net.ssl.HttpsURLConnection;
		
		public class ChatBot implements Runnable {
			private ChatWindow window;
			private String NAME = \"ChuckNorrisFan33\";
		
			public ChatBot(ChatWindow window) {
				this.window = window;
			}
		    
			public void run() {
				wait(2000);
				window.receiveMessage(NAME, \"Hello there\");
				wait(2000);
				window.receiveMessage(NAME, \"Wanna hear some jokes?\");
		
				while (true) {
					wait(7500 + (int) (Math.random() * 5000));
					try {
						window.receiveMessage(NAME, getJoke());
					} catch (IOException e) {
						e.printStackTrace();
					}
				}
			}
		
			private void wait(int millis) {
				try {
					Thread.sleep(millis);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}
		
			private String getJoke() throws IOException {
				URL obj = new URL(\"https://geek-jokes.sameerkumar.website/api\");
				HttpsURLConnection con = (HttpsURLConnection) obj.openConnection();
				con.setRequestMethod(\"GET\");
				con.setRequestProperty(\"User-Agent\", \"Mozilla/5.0\");
				int responseCode = con.getResponseCode();
				if (responseCode == HttpsURLConnection.HTTP_OK) { // success
					BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
					String inputLine;
					StringBuffer response = new StringBuffer();
		
					while ((inputLine = in.readLine()) != null) {
						response.append(inputLine);
					}
					in.close();
		
					return response.toString().replaceAll(\"\\"\", \"\").replaceAll(\"&quot;\", \"'\");
				} else {
					return \"Oh no, you seem to be offline. I could ne funny, but only with a connection to the world wide web!\";
				}
			}
		}");
	}
	